// source: src/proto/firehose.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
goog.exportSymbol('proto.sf.firehose.v2.ForkStep', null, global);
goog.exportSymbol('proto.sf.firehose.v2.Request', null, global);
goog.exportSymbol('proto.sf.firehose.v2.Response', null, global);
goog.exportSymbol('proto.sf.firehose.v2.SingleBlockRequest', null, global);
goog.exportSymbol('proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber', null, global);
goog.exportSymbol('proto.sf.firehose.v2.SingleBlockRequest.BlockNumber', null, global);
goog.exportSymbol('proto.sf.firehose.v2.SingleBlockRequest.Cursor', null, global);
goog.exportSymbol('proto.sf.firehose.v2.SingleBlockRequest.ReferenceCase', null, global);
goog.exportSymbol('proto.sf.firehose.v2.SingleBlockResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sf.firehose.v2.SingleBlockRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sf.firehose.v2.SingleBlockRequest.repeatedFields_, proto.sf.firehose.v2.SingleBlockRequest.oneofGroups_);
};
goog.inherits(proto.sf.firehose.v2.SingleBlockRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sf.firehose.v2.SingleBlockRequest.displayName = 'proto.sf.firehose.v2.SingleBlockRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockNumber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sf.firehose.v2.SingleBlockRequest.BlockNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.displayName = 'proto.sf.firehose.v2.SingleBlockRequest.BlockNumber';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.displayName = 'proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sf.firehose.v2.SingleBlockRequest.Cursor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sf.firehose.v2.SingleBlockRequest.Cursor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sf.firehose.v2.SingleBlockRequest.Cursor.displayName = 'proto.sf.firehose.v2.SingleBlockRequest.Cursor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sf.firehose.v2.SingleBlockResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sf.firehose.v2.SingleBlockResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sf.firehose.v2.SingleBlockResponse.displayName = 'proto.sf.firehose.v2.SingleBlockResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sf.firehose.v2.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.sf.firehose.v2.Request.repeatedFields_, null);
};
goog.inherits(proto.sf.firehose.v2.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sf.firehose.v2.Request.displayName = 'proto.sf.firehose.v2.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sf.firehose.v2.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sf.firehose.v2.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sf.firehose.v2.Response.displayName = 'proto.sf.firehose.v2.Response';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sf.firehose.v2.SingleBlockRequest.repeatedFields_ = [6];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.sf.firehose.v2.SingleBlockRequest.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.sf.firehose.v2.SingleBlockRequest.ReferenceCase = {
  REFERENCE_NOT_SET: 0,
  BLOCK_NUMBER: 3,
  BLOCK_HASH_AND_NUMBER: 4,
  CURSOR: 5
};

/**
 * @return {proto.sf.firehose.v2.SingleBlockRequest.ReferenceCase}
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.getReferenceCase = function() {
  return /** @type {proto.sf.firehose.v2.SingleBlockRequest.ReferenceCase} */(jspb.Message.computeOneofCase(this, proto.sf.firehose.v2.SingleBlockRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sf.firehose.v2.SingleBlockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sf.firehose.v2.SingleBlockRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.SingleBlockRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockNumber: (f = msg.getBlockNumber()) && proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.toObject(includeInstance, f),
    blockHashAndNumber: (f = msg.getBlockHashAndNumber()) && proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.toObject(includeInstance, f),
    cursor: (f = msg.getCursor()) && proto.sf.firehose.v2.SingleBlockRequest.Cursor.toObject(includeInstance, f),
    transformsList: jspb.Message.toObjectList(msg.getTransformsList(),
    google_protobuf_any_pb.Any.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sf.firehose.v2.SingleBlockRequest}
 */
proto.sf.firehose.v2.SingleBlockRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sf.firehose.v2.SingleBlockRequest;
  return proto.sf.firehose.v2.SingleBlockRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sf.firehose.v2.SingleBlockRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sf.firehose.v2.SingleBlockRequest}
 */
proto.sf.firehose.v2.SingleBlockRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.sf.firehose.v2.SingleBlockRequest.BlockNumber;
      reader.readMessage(value,proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.deserializeBinaryFromReader);
      msg.setBlockNumber(value);
      break;
    case 4:
      var value = new proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber;
      reader.readMessage(value,proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.deserializeBinaryFromReader);
      msg.setBlockHashAndNumber(value);
      break;
    case 5:
      var value = new proto.sf.firehose.v2.SingleBlockRequest.Cursor;
      reader.readMessage(value,proto.sf.firehose.v2.SingleBlockRequest.Cursor.deserializeBinaryFromReader);
      msg.setCursor(value);
      break;
    case 6:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addTransforms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sf.firehose.v2.SingleBlockRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sf.firehose.v2.SingleBlockRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.SingleBlockRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockNumber();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.serializeBinaryToWriter
    );
  }
  f = message.getBlockHashAndNumber();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.serializeBinaryToWriter
    );
  }
  f = message.getCursor();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.sf.firehose.v2.SingleBlockRequest.Cursor.serializeBinaryToWriter
    );
  }
  f = message.getTransformsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.prototype.toObject = function(opt_includeInstance) {
  return proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sf.firehose.v2.SingleBlockRequest.BlockNumber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.toObject = function(includeInstance, msg) {
  var f, obj = {
    num: jspb.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sf.firehose.v2.SingleBlockRequest.BlockNumber}
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sf.firehose.v2.SingleBlockRequest.BlockNumber;
  return proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sf.firehose.v2.SingleBlockRequest.BlockNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sf.firehose.v2.SingleBlockRequest.BlockNumber}
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sf.firehose.v2.SingleBlockRequest.BlockNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNum();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
};


/**
 * optional uint64 num = 1;
 * @return {string}
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.prototype.getNum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.sf.firehose.v2.SingleBlockRequest.BlockNumber} returns this
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockNumber.prototype.setNum = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.prototype.toObject = function(opt_includeInstance) {
  return proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.toObject = function(includeInstance, msg) {
  var f, obj = {
    num: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    hash: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber}
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber;
  return proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber}
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setNum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNum();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 num = 1;
 * @return {string}
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.prototype.getNum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber} returns this
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.prototype.setNum = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string hash = 2;
 * @return {string}
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber} returns this
 */
proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sf.firehose.v2.SingleBlockRequest.Cursor.prototype.toObject = function(opt_includeInstance) {
  return proto.sf.firehose.v2.SingleBlockRequest.Cursor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sf.firehose.v2.SingleBlockRequest.Cursor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.SingleBlockRequest.Cursor.toObject = function(includeInstance, msg) {
  var f, obj = {
    cursor: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sf.firehose.v2.SingleBlockRequest.Cursor}
 */
proto.sf.firehose.v2.SingleBlockRequest.Cursor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sf.firehose.v2.SingleBlockRequest.Cursor;
  return proto.sf.firehose.v2.SingleBlockRequest.Cursor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sf.firehose.v2.SingleBlockRequest.Cursor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sf.firehose.v2.SingleBlockRequest.Cursor}
 */
proto.sf.firehose.v2.SingleBlockRequest.Cursor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sf.firehose.v2.SingleBlockRequest.Cursor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sf.firehose.v2.SingleBlockRequest.Cursor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sf.firehose.v2.SingleBlockRequest.Cursor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.SingleBlockRequest.Cursor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string cursor = 1;
 * @return {string}
 */
proto.sf.firehose.v2.SingleBlockRequest.Cursor.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sf.firehose.v2.SingleBlockRequest.Cursor} returns this
 */
proto.sf.firehose.v2.SingleBlockRequest.Cursor.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional BlockNumber block_number = 3;
 * @return {?proto.sf.firehose.v2.SingleBlockRequest.BlockNumber}
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.getBlockNumber = function() {
  return /** @type{?proto.sf.firehose.v2.SingleBlockRequest.BlockNumber} */ (
    jspb.Message.getWrapperField(this, proto.sf.firehose.v2.SingleBlockRequest.BlockNumber, 3));
};


/**
 * @param {?proto.sf.firehose.v2.SingleBlockRequest.BlockNumber|undefined} value
 * @return {!proto.sf.firehose.v2.SingleBlockRequest} returns this
*/
proto.sf.firehose.v2.SingleBlockRequest.prototype.setBlockNumber = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.sf.firehose.v2.SingleBlockRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sf.firehose.v2.SingleBlockRequest} returns this
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.clearBlockNumber = function() {
  return this.setBlockNumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.hasBlockNumber = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BlockHashAndNumber block_hash_and_number = 4;
 * @return {?proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber}
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.getBlockHashAndNumber = function() {
  return /** @type{?proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber} */ (
    jspb.Message.getWrapperField(this, proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber, 4));
};


/**
 * @param {?proto.sf.firehose.v2.SingleBlockRequest.BlockHashAndNumber|undefined} value
 * @return {!proto.sf.firehose.v2.SingleBlockRequest} returns this
*/
proto.sf.firehose.v2.SingleBlockRequest.prototype.setBlockHashAndNumber = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.sf.firehose.v2.SingleBlockRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sf.firehose.v2.SingleBlockRequest} returns this
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.clearBlockHashAndNumber = function() {
  return this.setBlockHashAndNumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.hasBlockHashAndNumber = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Cursor cursor = 5;
 * @return {?proto.sf.firehose.v2.SingleBlockRequest.Cursor}
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.getCursor = function() {
  return /** @type{?proto.sf.firehose.v2.SingleBlockRequest.Cursor} */ (
    jspb.Message.getWrapperField(this, proto.sf.firehose.v2.SingleBlockRequest.Cursor, 5));
};


/**
 * @param {?proto.sf.firehose.v2.SingleBlockRequest.Cursor|undefined} value
 * @return {!proto.sf.firehose.v2.SingleBlockRequest} returns this
*/
proto.sf.firehose.v2.SingleBlockRequest.prototype.setCursor = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.sf.firehose.v2.SingleBlockRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sf.firehose.v2.SingleBlockRequest} returns this
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.clearCursor = function() {
  return this.setCursor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.hasCursor = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated google.protobuf.Any transforms = 6;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.getTransformsList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 6));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.sf.firehose.v2.SingleBlockRequest} returns this
*/
proto.sf.firehose.v2.SingleBlockRequest.prototype.setTransformsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.addTransforms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sf.firehose.v2.SingleBlockRequest} returns this
 */
proto.sf.firehose.v2.SingleBlockRequest.prototype.clearTransformsList = function() {
  return this.setTransformsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sf.firehose.v2.SingleBlockResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sf.firehose.v2.SingleBlockResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sf.firehose.v2.SingleBlockResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.SingleBlockResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    block: (f = msg.getBlock()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sf.firehose.v2.SingleBlockResponse}
 */
proto.sf.firehose.v2.SingleBlockResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sf.firehose.v2.SingleBlockResponse;
  return proto.sf.firehose.v2.SingleBlockResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sf.firehose.v2.SingleBlockResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sf.firehose.v2.SingleBlockResponse}
 */
proto.sf.firehose.v2.SingleBlockResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sf.firehose.v2.SingleBlockResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sf.firehose.v2.SingleBlockResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sf.firehose.v2.SingleBlockResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.SingleBlockResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlock();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Any block = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.sf.firehose.v2.SingleBlockResponse.prototype.getBlock = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.sf.firehose.v2.SingleBlockResponse} returns this
*/
proto.sf.firehose.v2.SingleBlockResponse.prototype.setBlock = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sf.firehose.v2.SingleBlockResponse} returns this
 */
proto.sf.firehose.v2.SingleBlockResponse.prototype.clearBlock = function() {
  return this.setBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sf.firehose.v2.SingleBlockResponse.prototype.hasBlock = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sf.firehose.v2.Request.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sf.firehose.v2.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.sf.firehose.v2.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sf.firehose.v2.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    startBlockNum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cursor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    stopBlockNum: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    finalBlocksOnly: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    transformsList: jspb.Message.toObjectList(msg.getTransformsList(),
    google_protobuf_any_pb.Any.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sf.firehose.v2.Request}
 */
proto.sf.firehose.v2.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sf.firehose.v2.Request;
  return proto.sf.firehose.v2.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sf.firehose.v2.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sf.firehose.v2.Request}
 */
proto.sf.firehose.v2.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartBlockNum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setStopBlockNum(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFinalBlocksOnly(value);
      break;
    case 10:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.addTransforms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sf.firehose.v2.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sf.firehose.v2.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sf.firehose.v2.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartBlockNum();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStopBlockNum();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = message.getFinalBlocksOnly();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getTransformsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 start_block_num = 1;
 * @return {number}
 */
proto.sf.firehose.v2.Request.prototype.getStartBlockNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sf.firehose.v2.Request} returns this
 */
proto.sf.firehose.v2.Request.prototype.setStartBlockNum = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string cursor = 2;
 * @return {string}
 */
proto.sf.firehose.v2.Request.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sf.firehose.v2.Request} returns this
 */
proto.sf.firehose.v2.Request.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 stop_block_num = 3;
 * @return {string}
 */
proto.sf.firehose.v2.Request.prototype.getStopBlockNum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.sf.firehose.v2.Request} returns this
 */
proto.sf.firehose.v2.Request.prototype.setStopBlockNum = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional bool final_blocks_only = 4;
 * @return {boolean}
 */
proto.sf.firehose.v2.Request.prototype.getFinalBlocksOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sf.firehose.v2.Request} returns this
 */
proto.sf.firehose.v2.Request.prototype.setFinalBlocksOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * repeated google.protobuf.Any transforms = 10;
 * @return {!Array<!proto.google.protobuf.Any>}
 */
proto.sf.firehose.v2.Request.prototype.getTransformsList = function() {
  return /** @type{!Array<!proto.google.protobuf.Any>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_any_pb.Any, 10));
};


/**
 * @param {!Array<!proto.google.protobuf.Any>} value
 * @return {!proto.sf.firehose.v2.Request} returns this
*/
proto.sf.firehose.v2.Request.prototype.setTransformsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.google.protobuf.Any=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Any}
 */
proto.sf.firehose.v2.Request.prototype.addTransforms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.google.protobuf.Any, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sf.firehose.v2.Request} returns this
 */
proto.sf.firehose.v2.Request.prototype.clearTransformsList = function() {
  return this.setTransformsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sf.firehose.v2.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.sf.firehose.v2.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sf.firehose.v2.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    block: (f = msg.getBlock()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),
    step: jspb.Message.getFieldWithDefault(msg, 6, 0),
    cursor: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sf.firehose.v2.Response}
 */
proto.sf.firehose.v2.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.sf.firehose.v2.Response;
  return proto.sf.firehose.v2.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sf.firehose.v2.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sf.firehose.v2.Response}
 */
proto.sf.firehose.v2.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setBlock(value);
      break;
    case 6:
      var value = /** @type {!proto.sf.firehose.v2.ForkStep} */ (reader.readEnum());
      msg.setStep(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCursor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sf.firehose.v2.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.sf.firehose.v2.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sf.firehose.v2.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sf.firehose.v2.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlock();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
  f = message.getStep();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getCursor();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional google.protobuf.Any block = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.sf.firehose.v2.Response.prototype.getBlock = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.sf.firehose.v2.Response} returns this
*/
proto.sf.firehose.v2.Response.prototype.setBlock = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sf.firehose.v2.Response} returns this
 */
proto.sf.firehose.v2.Response.prototype.clearBlock = function() {
  return this.setBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sf.firehose.v2.Response.prototype.hasBlock = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ForkStep step = 6;
 * @return {!proto.sf.firehose.v2.ForkStep}
 */
proto.sf.firehose.v2.Response.prototype.getStep = function() {
  return /** @type {!proto.sf.firehose.v2.ForkStep} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.sf.firehose.v2.ForkStep} value
 * @return {!proto.sf.firehose.v2.Response} returns this
 */
proto.sf.firehose.v2.Response.prototype.setStep = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string cursor = 10;
 * @return {string}
 */
proto.sf.firehose.v2.Response.prototype.getCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.sf.firehose.v2.Response} returns this
 */
proto.sf.firehose.v2.Response.prototype.setCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * @enum {number}
 */
proto.sf.firehose.v2.ForkStep = {
  STEP_UNSET: 0,
  STEP_NEW: 1,
  STEP_UNDO: 2,
  STEP_FINAL: 3
};

goog.object.extend(exports, proto.sf.firehose.v2);
